{"version":3,"sources":["context/AppContext.ts","initialState.tsx","hooks/useInitialState.tsx","components/Products.tsx","containers/Home.tsx","assets/img/loading.gif","router/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppContext","createContext","cart","buyer","order","pokemons","useInitialState","useState","initialState","state","setPokemons","useEffect","axios","get","then","res","data","results","Promise","all","map","e","url","Products","props","Poke","styled","div","sprites","front_default","Home","Container","allData","useContext","index","App","isEmpty","length","console","log","Provider","value","exact","path","component","src","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAIeA,EAFIC,wBAAc,I,QCFlB,GACbC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,SAAU,I,iBC2DGC,MA5Df,WACE,IAD8B,EAEJC,mBAASC,GAFL,mBAEvBC,EAFuB,aAGSF,mBAAS,KAHlB,mBAGvBF,EAHuB,KAGbK,EAHa,KAyD9B,OAtCAC,qBAAU,WACRC,IACGC,IAAI,+CACJC,MAAK,SAACC,GAAD,OAAcA,EAAIC,KAAKC,WAC5BH,MAAK,SAACG,GACL,OAAOC,QAAQC,IAAIF,EAAQG,KAAI,SAACC,GAAD,OAAyBT,IAAMC,IAAIQ,EAAEC,YAErER,MAAK,SAACG,GACPP,EAAYO,QAGb,IA2BI,CAAER,QAAOJ,a,0JCrCHkB,MApBf,SAAkBC,GAClB,IAAMC,EAAMC,IAAOC,IAAT,IAGcH,EAAMR,KAAKY,QAAQC,eAIvC,OACI,mCAEA,cAACJ,EAAD,O,iLCVR,IAmBeK,EAnBF,WACX,IAAMC,EAAYL,IAAOC,IAAV,KAQXK,EADcC,qBAAWjC,GACVK,SACnB,OACE,cAAC0B,EAAD,UACGC,EAAQZ,KAAI,SAACC,EAAOa,GAAR,OACX,cAAC,EAAD,eAA6Bb,GAAZa,SCjBV,MAA0B,oCC2B1BC,MArBf,WACE,IAAM3B,EAAeF,IAEjB8B,EAAU5B,EAAaH,SAASgC,OAEpC,OADFC,QAAQC,IAAIH,GAET,mCACCA,GAAU,IAAM,cAAC,EAAWI,SAAZ,CAAqBC,MAAOjC,EAA5B,SACd,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,IAAIC,UAAWd,UAIvC,qBAAKe,IAAKC,OCNCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1bc88f4.chunk.js","sourcesContent":["import  React,{createContext} from 'react';\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport default AppContext;\r\n","export default {\r\n  cart: [],\r\n  buyer: [],\r\n  order: [],\r\n  pokemons: [ ],\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport initialState from \"../initialState\";\r\nimport axios from \"axios\";\r\nfunction useInitialState(): any {\r\n  const api = \"\";\r\n  const [state, setState] = useState(initialState);\r\n  const [pokemons, setPokemons]: any[] = useState([]);\r\n  //   async function dataRes() {\r\n  //     let multiApi: any = [];\r\n  //     let res = await axios(\"https://pokeapi.co/api/v2/pokemon?limit=802\");\r\n  //     let urls = res.data.results;\r\n  //     for (let i = 0; i < urls.length; i++) {\r\n  //       axios.get(urls[i].url).then((res: any) => {\r\n\r\n  //         setPokemons([...pokemons,res.data])\r\n  //         console.log(pokemons)\r\n  //       });\r\n  //     }\r\n\r\n  //  ;\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=802\")\r\n      .then((res): any => res.data.results)\r\n      .then((results) => {\r\n        return Promise.all(results.map((e: { url: string; }) => axios.get(e.url)));\r\n      })\r\n      .then((results): any => {\r\n      setPokemons(results)\r\n       \r\n      });\r\n  }, []);\r\n\r\n  // const addToCart:any = (payload: never) => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     cart: [...state.cart, payload],\r\n  //   });\r\n  // };\r\n\r\n  // const removeFromCart:any = (payload: never, indexToRemove: number) => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     cart: state.cart.filter(\r\n  //       (_item, indexCurrent) => indexCurrent !== indexToRemove\r\n  //     ),\r\n  //   });\r\n  // };\r\n  // const addToBuyer:any = (payload: never) => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     buyer: [...state.buyer, payload],\r\n  //   });\r\n  // };\r\n  // const addNewOrder:any = (payload: never) => {\r\n  //   setState({ ...state, order: [...state.order, payload] });\r\n  // };\r\n\r\n  return { state, pokemons };\r\n}\r\n\r\nexport default useInitialState;\r\n","\r\nimport React ,{useEffect,useState} from \"react\";\r\nimport styled from 'styled-components'\r\nfunction Products(props:any) {\r\nconst Poke= styled.div`\r\nwidth:100%;\r\n\r\nbackground-image: url(${props.data.sprites.front_default});\r\nheight:100px;\r\n`\r\n\r\n    return (\r\n        < >\r\n        \r\n        <Poke />\r\n        </>\r\n        \r\n\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React, { useContext } from \"react\";\r\nimport Products from \"../components/Products\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport styled from \"styled-components\";\r\nconst Home = (): any => {\r\n  const Container = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n  `;\r\n  const data: any = useContext(AppContext);\r\n  let allData = data.pokemons;\r\n  return (\r\n    <Container>\r\n      {allData.map((e: any,index:number) => (\r\n        <Products  key ={index } {...e} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/loading.d8f29561.gif\";","import * as React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport useInitialState from \"../hooks/useInitialState\";\r\nimport Home from \"../containers/Home\";\r\nimport loading from \"../assets/img/loading.gif\";\r\nfunction App() :any {\r\n  const initialState = useInitialState();\r\n\r\nconst isEmpty = initialState.pokemons.length;\r\nconsole.log(isEmpty)\r\n  return (\r\n   <>\r\n   {isEmpty >=802?( <AppContext.Provider value={initialState}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </AppContext.Provider>):\r\n    <img src={loading}/>\r\n    }\r\n   \r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './router/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}